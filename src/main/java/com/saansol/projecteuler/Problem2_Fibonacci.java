package com.saansol.projecteuler;

/**
 * Problem Statement 1:
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 * 
 */
public class Problem2_Fibonacci {

	/**
	 * @param upperLimit
	 * @return
	 */
	public static long sumOfEvenValuedFibonacciNumbers(long upperLimit) {
		// The series is 1, 2, 3, 5, 8, ....
		// every n th number in the series is sum of ( n -1 ) th number and ( n
		// - 2 ) the number
		// It holds ( n - 2) number in series
		long n_minus_2 = 1;
		// It holds ( n - 1) number in series
		long n_minus_1 = 2;

		// It holds sum of all even values numbers in the Fibonacci series
		long sum = 2;

		while (true) {
			// calculate the n th number in the series by adding ( n - 1 ) th
			// term with ( n - 2 )th term.
			long n = n_minus_1 + n_minus_2;

			// if n th term is greater than the upper limit then we are done.
			// just break from while loop.
			if (n > upperLimit) {
				break;
			}

			// Check if the number is even by checking the 1st bit.
			if ((n & 1) == 0) {
				// if number is even then add to sum.
				sum += n;
			}

			// change the variable values appropriately
			n_minus_2 = n_minus_1;
			n_minus_1 = n;
		}
		return sum;
	}

	public static void main(String[] args) {
		System.out.println(sumOfEvenValuedFibonacciNumbers(4000000));

	}

}
